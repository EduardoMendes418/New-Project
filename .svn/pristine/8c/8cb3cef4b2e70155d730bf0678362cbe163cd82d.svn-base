
formRestaurante.controller("formRestauranteCtrl", ['$rootScope', '$scope', '$state', '$location', 'dashboardService', 'Flash','$http',
function ($rootScope, $scope, $state, $location, dashboardService, Flash,$http) {
$scope.carregando = false;

var url = 'https://www.iptufacil.com.br';
//var url = 'http://192.168.0.69:8040';
 //  $scope.$watch('form.cep.length', function(count, oldCount){
 //    if(count == 8){
 //     $scope.getAddressByCep();
 //   }
 // });

  // Maximum call stack size exceeded
  $scope.cadastroOk = false;
  $scope.getAddressByCep = function(){
    
   $http.get("https://www.iptufacil.com.br/ws/geral/public/cep/"+$scope.form.cep).success(function(data) {
     
        $scope.form.bairro     = data.bairro;
        $scope.form.cidade     = data.cidade;
        $scope.form.uf         = data.estado;
        $scope.form.logradouro = data.logradouro;

  });
}

// Cadastro de Restaurantes
$scope.cadastrarRestaurante = function(){

  if (grecaptcha.getResponse() == "") {
    
    Flash.create('danger', 'Robôs não podem enviar esse formulário!', 'large-text');
    return false;
}

 if ($scope.formEmpresa.$invalid) {
    angular.forEach($scope.formEmpresa.$error, function (field) {
      angular.forEach(field, function(errorField){
        errorField.$setTouched();
      })
    });
    Flash.create('danger', 'Por favor, preencha os campos em vermelho!', 'large-text');
   
    return false;
  }

 var razaoSocial = $scope.form.razaoSocial;
 var nomeFantasia = $scope.form.nomeFantasia;

 var tipoCozinha = $scope.form.tipoCozinha;
 var pMotoboy   =  $("input[name='pMotoboy[]']:checked").val();
 var qtdEmpresa = $scope.form.qtdEntrega;
 var formaPagamento = new Array();

 var cnpj = $scope.form.cnpj;
 var nomeContato = $scope.form.nomeContato;
 var email = $scope.form.email;
 var telefone = $scope.form.telefone;    
 var qtdFuncionarios = $scope.form.qtdFuncionarios;
 var logradouro = $scope.form.logradouro;
 var bairro = $scope.form.bairro;
 var cidade = $scope.form.cidade;
 var uf = $scope.form.uf;
 var complemento = $scope.form.complemento;
 var numero = $scope.form.numero;
 var cep = $scope.form.cep;
 var senha = $scope.form.senha;

$("input[type=checkbox][name='formaPagamento[]']:checked").each(function(){

    formaPagamento.push($(this).val());
    
});

  formPag = formaPagamento.toString();
  
 $scope.carregando = true;

$http.post(url + '/ws/goey/rest/public/cadastroRestaurantes', ({

   razaoSocial:razaoSocial, 
    nomeFantasia:nomeFantasia,
    tipoCozinha:tipoCozinha,
    pMotoboy:pMotoboy,
    qtdEmpresa:qtdEmpresa,
    formaPagamento:formPag, 
    cnpj:cnpj, 
    nomeContato:nomeContato,
    email:email,
    telefone:telefone, 
    qtdFuncionarios:qtdFuncionarios, 
    logradouro:logradouro, 
    bairro:bairro, 
    cidade:cidade, 
    uf:uf, 
    complemento:complemento, 
    numero:numero, 
    cep:cep, 
    senha:senha,
    tipoUsuario: 3, 
    ramoAtividade: 59, 
    auth:'3f018bfb43591ccb2ef46f10de832160'})
      ).then(function(response){

                      if(response.data.retorno == 1){

                        Flash.create('success', response.data.mensagem, 'large-text');

                      }else{

                        Flash.create('info', response.data.mensagem, 'large-text');
                        
                      }


                      }); 

 $scope.carregando = false;
}

}]);


formRestaurante.directive('capitalize', function() {
    return {
      require: 'ngModel',
      link: function(scope, element, attrs, modelCtrl) {
        var capitalize = function(inputValue) {
          if (inputValue == undefined) inputValue = '';
          var capitalized = inputValue.toUpperCase();
          if (capitalized !== inputValue) {
            // see where the cursor is before the update so that we can set it back
            var selection = element[0].selectionStart;
            modelCtrl.$setViewValue(capitalized);
            modelCtrl.$render();
            // set back the cursor after rendering
            element[0].selectionStart = selection;
            element[0].selectionEnd = selection;
          }
          return capitalized;
        }
        modelCtrl.$parsers.push(capitalize);
        capitalize(scope[attrs.ngModel]); // capitalize initial value
      }
    };
  });